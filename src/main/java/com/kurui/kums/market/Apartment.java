package com.kurui.kums.market;

import java.math.BigDecimal;
import java.util.Date;

import com.kurui.kums.base.Constant;
import com.kurui.kums.base.util.DateUtil;
import com.kurui.kums.base.util.UnitConverter;
import com.kurui.kums.market.entity._Apartment;

/**
 * PriceIndex generated by hbm2java
 */

public class Apartment extends _Apartment {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	private Long estateDishId = Long.valueOf(0);

	public static final long BUSINESS_TYPE_1 = 1;// 住宅
	public static final long BUSINESS_TYPE_11 = 11;// 商业

	public static final long TRANSACTION_TYPE_1 = 1;// 求售
	public static final long TRANSACTION_TYPE_11 = 11;// 求购
	public static final long TRANSACTION_TYPE_21 = 21;// 出租
	public static final long TRANSACTION_TYPE_31 = 31;// 求租

	// 类型
	public static final long TYPE_1 = 1;// 默认

	// 状态
	public static final long STATES_1 = 1;// 有效
	public static final long STATES_0 = 0;// 无效

	public String getShowSnatchTime() {
		String mydate = "";
		if (this.snatchTime != null && "".equals(snatchTime) == false) {
			Date tempDate = new Date(snatchTime.getTime());
			mydate = DateUtil.getDateString(tempDate, "yyyy-MM-dd HH:mm:ss");
		}
		return mydate;
	}

	private String snatchDate = "";

	public String getSnatchDate() {
		if (this.snatchTime != null && "".equals(snatchTime) == false) {
			Date tempDate = new Date(snatchTime.getTime());
			snatchDate = DateUtil.getDateString(tempDate, "yyyy-MM-dd");
		}
		return snatchDate;
	}

	public void setSnatchDate(String snatchDate) {
		this.snatchDate = snatchDate;
	}

	public String getTransactionTypeInfo() {
		if (this.getTransactionType() != null) {
			if (this.getTransactionType().intValue() == TRANSACTION_TYPE_1) {
				return "出售";
			} else if (this.getTransactionType().intValue() == TRANSACTION_TYPE_11) {
				return "求购";
			} else if (this.getTransactionType().intValue() == TRANSACTION_TYPE_21) {
				return "出租";
			} else if (this.getTransactionType().intValue() == TRANSACTION_TYPE_31) {
				return "求租";
			} else {
				return "";
			}
		} else {
			return "";
		}
	}

	public String getBusinessTypeInfo() {
		if (this.getBusinessType() != null) {
			if (this.getBusinessType().intValue() == BUSINESS_TYPE_1) {
				return "住宅";
			} else if (this.getBusinessType().intValue() == BUSINESS_TYPE_11) {
				return "商业";
			} else {
				return "";
			}
		} else {
			return "";
		}
	}

	public String getTypeInfo() {
		if (this.getType() != null) {
			if (this.getType().intValue() == TYPE_1) {
				return "默认";
			} else {
				return "";
			}
		} else {
			return "";
		}
	}

	// 状态
	public String getStatusInfo() {
		if (this.getStatus() != null) {
			if (this.getStatus() == STATES_1) {
				return "有效";
			} else if (this.getStatus().intValue() == STATES_0) {
				return "无效";
			} else {
				return null;
			}
		} else {
			return null;
		}
	}

	public BigDecimal getAverageAreaPrice() {
		if (averageAreaPrice == null) {
			averageAreaPrice = BigDecimal.ZERO;
		}

		if (averageAreaPrice.compareTo(BigDecimal.ZERO) <= 0) {
			if (getQuotePrice().compareTo(BigDecimal.ZERO) > 0) {
				BigDecimal areaValue = Constant.toBigDecimal(getArea());
				if (areaValue.compareTo(BigDecimal.ZERO) > 0) {
					System.out.println("quotePrice:" + getQuotePrice()
							+ "====areaValue:" + areaValue);
					averageAreaPrice = getQuotePrice().divide(areaValue,1);
				}
			}
		}
		return this.averageAreaPrice;
	}
	
	public Long getEstateDishId() {
		return estateDishId;
	}

	public void setEstateDishId(Long estateDishId) {
		this.estateDishId = estateDishId;
	}

}
